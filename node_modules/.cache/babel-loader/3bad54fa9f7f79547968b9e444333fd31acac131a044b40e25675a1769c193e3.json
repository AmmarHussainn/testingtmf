{"ast":null,"code":"var _jsxFileName = \"/Users/ammarhussain/Desktop/TMF-frontend/src/pages/Auth/resetpassword_one.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { TextInput } from '../../components/TextInput';\nimport SvgIcons from '../../components/svg';\nimport { SimpleButton } from '../../components/SimpleButton';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { useFormik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ResetPassword_One = () => {\n  _s();\n  const navigate = useNavigate();\n  let formik = useFormik({\n    initialValues: {\n      email: '',\n      error: '',\n      success: ''\n    },\n    validate: values => {\n      let errors = {};\n      if (!values.email) {\n        errors.email = 'Required';\n      } else if (!isValidEmail(values.email)) {\n        errors.email = 'Invalid email. Please enter a valid email.';\n      }\n      return errors;\n    }\n  });\n  function isValidEmail(email) {\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    return emailPattern.test(email);\n  }\n  useEffect(() => {\n    if (formik.values.error) formik.setValues({\n      ...formik.values,\n      error: ''\n    });\n  }, [formik.values.email]);\n  const handleSendOTP = async () => {\n    try {\n      const response = await axios.post('https://tmf-backend.onrender.com/users/reset-password-request', {\n        email: formik.values.email\n      });\n      console.log('response', response, {\n        email: formik.values.email\n      });\n      if (response.status === 200) {\n        sessionStorage.setItem('reset-password', JSON.stringify({\n          email: formik.values.email\n        }));\n        navigate('/otp');\n      } else {\n        formik.setValues({\n          ...formik.values,\n          error: 'Failed to send OTP. Please try again.'\n        });\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      formik.setValues({\n        ...formik.values,\n        error: ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to send OTP. Please try again.'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full flex justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-[90%] md:w-[480px] border-[1px] border-black flex flex-col items-center mt-20\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-[30px] md:text-[38px] font-bold font-poppins py-3\",\n        children: \"TMF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-[40px] md:text-[48px] font-bold font-roboto \",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-[14px] md:text-[18px]  font-roboto py-3\",\n        children: \"An OTP will be sent to your email for verification\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-[90%] md:w-[80%]\",\n        children: /*#__PURE__*/_jsxDEV(TextInput, {\n          label: \"Enter Email*\",\n          type: \"text\",\n          value: formik.values.email,\n          onChange: e => formik.setValues({\n            ...formik.values,\n            email: e.target.value\n          }),\n          error: formik.values.syntaxError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), formik.values.error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-red-500\",\n        children: formik.values.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-[90%] md:w-[80%] pb-8\",\n        children: /*#__PURE__*/_jsxDEV(SimpleButton, {\n          text: \"Send OTP\",\n          style: \"dark\",\n          onClick: handleSendOTP,\n          disabled: formik.values.email == '' || formik.errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword_One, \"Rp2mugcnJ3NxV4Ez9Xu1KHLBmFk=\", false, function () {\n  return [useNavigate, useFormik];\n});\n_c = ResetPassword_One;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword_One\");","map":{"version":3,"names":["React","useEffect","useState","TextInput","SvgIcons","SimpleButton","useNavigate","axios","useFormik","jsxDEV","_jsxDEV","ResetPassword_One","_s","navigate","formik","initialValues","email","error","success","validate","values","errors","isValidEmail","emailPattern","test","setValues","handleSendOTP","response","post","console","log","status","sessionStorage","setItem","JSON","stringify","err","_err$response","_err$response$data","data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","label","type","value","onChange","e","target","syntaxError","text","style","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/ammarhussain/Desktop/TMF-frontend/src/pages/Auth/resetpassword_one.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { TextInput } from '../../components/TextInput';\nimport SvgIcons from '../../components/svg';\nimport { SimpleButton } from '../../components/SimpleButton';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { useFormik } from 'formik';\nexport const ResetPassword_One = () => {\n  const navigate = useNavigate();\n  let formik = useFormik({\n    initialValues: {\n      email: '',\n      error: '',\n      success: '',\n    },\n    validate: (values) => {\n      let errors = {};\n      if (!values.email) {\n        errors.email = 'Required';\n      } else if (!isValidEmail(values.email)) {\n        errors.email = 'Invalid email. Please enter a valid email.';\n      }\n      return errors;\n    },\n  });\n\n  function isValidEmail(email) {\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    return emailPattern.test(email);\n  }\n\n  useEffect(() => {\n    if (formik.values.error) formik.setValues({ ...formik.values, error: '' });\n  }, [formik.values.email]);\n\n  const handleSendOTP = async () => {\n    try {\n      const response = await axios.post(\n        'https://tmf-backend.onrender.com/users/reset-password-request',\n        {\n          email: formik.values.email,\n        }\n      );\n      console.log('response', response, {\n        email: formik.values.email,\n      });\n      if (response.status === 200) {\n        sessionStorage.setItem(\n          'reset-password',\n          JSON.stringify({ email: formik.values.email })\n        );\n        navigate('/otp');\n      } else {\n        formik.setValues({\n          ...formik.values,\n          error: 'Failed to send OTP. Please try again.',\n        });\n      }\n    } catch (err) {\n      formik.setValues({\n        ...formik.values,\n        error:\n          err.response?.data?.message ||\n          'Failed to send OTP. Please try again.',\n      });\n    }\n  };\n\n  return (\n    <div className='w-full flex justify-center'>\n      <div className='w-[90%] md:w-[480px] border-[1px] border-black flex flex-col items-center mt-20'>\n        <h2 className='text-[30px] md:text-[38px] font-bold font-poppins py-3'>\n          TMF\n        </h2>\n        <h1 className='text-[40px] md:text-[48px] font-bold font-roboto '>\n          Reset Password\n        </h1>\n        <p className='text-[14px] md:text-[18px]  font-roboto py-3'>\n          An OTP will be sent to your email for verification\n        </p>\n\n        <div className='w-[90%] md:w-[80%]'>\n          <TextInput\n            label='Enter Email*'\n            type='text'\n            value={formik.values.email}\n            onChange={(e) =>\n              formik.setValues({ ...formik.values, email: e.target.value })\n            }\n            error={formik.values.syntaxError}\n          />\n        </div>\n        {formik.values.error && (\n          <div className='text-red-500'>{formik.values.error}</div>\n        )}\n\n        <div className='w-[90%] md:w-[80%] pb-8'>\n          <SimpleButton\n            text='Send OTP'\n            style='dark'\n            onClick={handleSendOTP}\n            disabled={formik.values.email == '' || formik.errors.email}\n          />\n        </div>\n\n        {/* <p className='text-[14px] md:text-[16px] flex  font-roboto py-3 pb-5 gap-2'>\n            Don't have an account?\n          <span className='cursor-pointer underline' onClick={()=>{navigate('/signup')}}>{` Sign Up`}</span>\n        </p> */}\n      </div>\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}