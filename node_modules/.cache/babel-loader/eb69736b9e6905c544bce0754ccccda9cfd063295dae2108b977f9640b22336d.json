{"ast":null,"code":"var _jsxFileName = \"/Users/ammarhussain/Desktop/TMF-frontend/src/components/BoldText.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoldText = ({\n  text\n}) => {\n  const parseText = inputText => {\n    const parts = inputText.split(/(\\*\\*.*?\\*\\*|##.*?##)/);\n    return parts.map((part, index) => {\n      if (part.startsWith(\"**\") && part.endsWith(\"**\")) {\n        return /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [part.slice(2, -2), \" \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 7,\n          columnNumber: 13\n        }, this);\n      }\n      if (part.startsWith(\"##\") && part.endsWith(\"##\")) {\n        return /*#__PURE__*/_jsxDEV(\"strong\", {\n          style: {\n            fontSize: \"larger\"\n          },\n          children: [part.slice(2, -2), \" \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this);\n      }\n      return part;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: parseText(text)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 12\n  }, this);\n};\n_c = BoldText;\nexport default BoldText;\nvar _c;\n$RefreshReg$(_c, \"BoldText\");","map":{"version":3,"names":["BoldText","text","parseText","inputText","parts","split","map","part","index","startsWith","endsWith","_jsxDEV","children","slice","fileName","_jsxFileName","lineNumber","columnNumber","style","fontSize","_c","$RefreshReg$"],"sources":["/Users/ammarhussain/Desktop/TMF-frontend/src/components/BoldText.js"],"sourcesContent":["const BoldText = ({ text }) => {\n    const parseText = (inputText) => {\n      const parts = inputText.split(/(\\*\\*.*?\\*\\*|##.*?##)/); \n      return parts.map((part, index) => {\n        if (part.startsWith(\"**\") && part.endsWith(\"**\")) {\n          return (\n            <strong key={index}>\n              {part.slice(2, -2)} {/* Remove ** */}\n            </strong>\n          );\n        }\n        if (part.startsWith(\"##\") && part.endsWith(\"##\")) {\n          return (\n            <strong key={index} style={{ fontSize: \"larger\" }}>\n              {part.slice(2, -2)} {/* Remove ## */}\n            </strong>\n          );\n        }\n        return part; \n      });\n    };\n  \n    return <div>{parseText(text)}</div>;\n  };\n\n  export default BoldText"],"mappings":";;AAAA,MAAMA,QAAQ,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC3B,MAAMC,SAAS,GAAIC,SAAS,IAAK;IAC/B,MAAMC,KAAK,GAAGD,SAAS,CAACE,KAAK,CAAC,uBAAuB,CAAC;IACtD,OAAOD,KAAK,CAACE,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MAChC,IAAID,IAAI,CAACE,UAAU,CAAC,IAAI,CAAC,IAAIF,IAAI,CAACG,QAAQ,CAAC,IAAI,CAAC,EAAE;QAChD,oBACEC,OAAA;UAAAC,QAAA,GACGL,IAAI,CAACM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAC,GAAC;QAAA,GADTL,KAAK;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CAAC;MAEb;MACA,IAAIV,IAAI,CAACE,UAAU,CAAC,IAAI,CAAC,IAAIF,IAAI,CAACG,QAAQ,CAAC,IAAI,CAAC,EAAE;QAChD,oBACEC,OAAA;UAAoBO,KAAK,EAAE;YAAEC,QAAQ,EAAE;UAAS,CAAE;UAAAP,QAAA,GAC/CL,IAAI,CAACM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAC,GAAC;QAAA,GADTL,KAAK;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CAAC;MAEb;MACA,OAAOV,IAAI;IACb,CAAC,CAAC;EACJ,CAAC;EAED,oBAAOI,OAAA;IAAAC,QAAA,EAAMV,SAAS,CAACD,IAAI;EAAC;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACrC,CAAC;AAACG,EAAA,GAvBEpB,QAAQ;AAyBZ,eAAeA,QAAQ;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}