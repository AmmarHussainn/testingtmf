{"ast":null,"code":"var _jsxFileName = \"/Users/ammarhussain/Desktop/TMF-frontend/src/components/TextInput.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TextInput = ({\n  ...props\n}) => {\n  _s();\n  const [inputType, setInputType] = useState((props === null || props === void 0 ? void 0 : props.type) || 'text');\n  const toggleInputType = () => {\n    setInputType(prevType => prevType === 'text' ? 'password' : 'text');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col w-[100%] py-2 gap-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-[14px] md:text-[16px]  font-roboto w-full\",\n      children: props === null || props === void 0 ? void 0 : props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: props.error ? 'border-[1px] border-[#ff0000] flex items-center' : 'border-[1px] border-black flex items-center',\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: inputType,\n        className: \"p-2 w-full focus:outline-none\",\n        value: props === null || props === void 0 ? void 0 : props.value,\n        onInput: props === null || props === void 0 ? void 0 : props.onChange,\n        placeholder: props === null || props === void 0 ? void 0 : props.placeholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), (props === null || props === void 0 ? void 0 : props.icon) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-2 cursor-pointer\",\n        onClick: toggleInputType,\n        children: props === null || props === void 0 ? void 0 : props.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-[14px] md:text-[16px]  font-roboto w-full text-[#ff0000]\",\n      children: (props === null || props === void 0 ? void 0 : props.error) || ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_s(TextInput, \"fc49PgWayqIK+ce6K2dFeiS4isw=\");\n_c = TextInput;\nvar _c;\n$RefreshReg$(_c, \"TextInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TextInput","props","_s","inputType","setInputType","type","toggleInputType","prevType","className","children","label","fileName","_jsxFileName","lineNumber","columnNumber","error","value","onInput","onChange","placeholder","icon","onClick","_c","$RefreshReg$"],"sources":["/Users/ammarhussain/Desktop/TMF-frontend/src/components/TextInput.js"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nexport const TextInput = ({ ...props }) => {\n    const [inputType, setInputType] = useState(props?.type || 'text');\n\n    const toggleInputType = () => {\n      setInputType((prevType) => (prevType === 'text' ? 'password' : 'text'));\n    };\n  return (\n    <div className='flex flex-col w-[100%] py-2 gap-2'>\n      <div className='text-[14px] md:text-[16px]  font-roboto w-full'>{props?.label}</div>\n      <div className={props.error ?'border-[1px] border-[#ff0000] flex items-center':'border-[1px] border-black flex items-center'}>\n        <input\n         type={inputType}\n          className='p-2 w-full focus:outline-none'\n          value={props?.value}\n          onInput={props?.onChange}\n          placeholder={props?.placeholder}\n        />\n       {props?.icon && <div className='px-2 cursor-pointer'  onClick={toggleInputType}>{props?.icon}</div>}\n      </div>\n      <div className='text-[14px] md:text-[16px]  font-roboto w-full text-[#ff0000]'>{props?.error || ''}</div>\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjC,OAAO,MAAMC,SAAS,GAAGA,CAAC;EAAE,GAAGC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,CAAAI,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEI,IAAI,KAAI,MAAM,CAAC;EAEjE,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5BF,YAAY,CAAEG,QAAQ,IAAMA,QAAQ,KAAK,MAAM,GAAG,UAAU,GAAG,MAAO,CAAC;EACzE,CAAC;EACH,oBACER,OAAA;IAAKS,SAAS,EAAC,mCAAmC;IAAAC,QAAA,gBAChDV,OAAA;MAAKS,SAAS,EAAC,gDAAgD;MAAAC,QAAA,EAAER,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAES;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACpFf,OAAA;MAAKS,SAAS,EAAEP,KAAK,CAACc,KAAK,GAAE,iDAAiD,GAAC,6CAA8C;MAAAN,QAAA,gBAC3HV,OAAA;QACCM,IAAI,EAAEF,SAAU;QACfK,SAAS,EAAC,+BAA+B;QACzCQ,KAAK,EAAEf,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEe,KAAM;QACpBC,OAAO,EAAEhB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEiB,QAAS;QACzBC,WAAW,EAAElB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEkB;MAAY;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,EACF,CAAAb,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEmB,IAAI,kBAAIrB,OAAA;QAAKS,SAAS,EAAC,qBAAqB;QAAEa,OAAO,EAAEf,eAAgB;QAAAG,QAAA,EAAER,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEmB;MAAI;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/F,CAAC,eACNf,OAAA;MAAKS,SAAS,EAAC,+DAA+D;MAAAC,QAAA,EAAE,CAAAR,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEc,KAAK,KAAI;IAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtG,CAAC;AAEV,CAAC;AAACZ,EAAA,CAtBWF,SAAS;AAAAsB,EAAA,GAATtB,SAAS;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}