{"ast":null,"code":"var _jsxFileName = \"/Users/ammarhussain/Desktop/TMF-frontend/src/pages/Auth/resetpassword_two.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { TextInput } from '../../components/TextInput';\nimport SvgIcons from '../../components/svg';\nimport { SimpleButton } from '../../components/SimpleButton';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { useFormik } from 'formik';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ResetPassword_Two = () => {\n  _s();\n  const navigate = useNavigate();\n  let formik = useFormik({\n    initialValues: {\n      error: '',\n      success: '',\n      syntaxError: '',\n      newPassword: '',\n      confirmPassword: ''\n    }\n  });\n  useEffect(() => {\n    if (formik.values.syntaxError) formik.setValues({\n      ...formik.values,\n      syntaxError: ''\n    });\n  }, [formik.values.newPassword, formik.values.confirmPassword]);\n  const handleConfirmClick = async () => {\n    try {\n      const resetPasswordData = sessionStorage.getItem('reset-password');\n      let sessionDataObject;\n      if (resetPasswordData) {\n        sessionDataObject = JSON.parse(resetPasswordData);\n      }\n      const response = await axios.post('https://tmf-backend.onrender.com/users/reset-password', {\n        ...sessionDataObject,\n        newPassword: formik.values.newPassword\n      });\n      if (response.status === 200) {\n        sessionStorage.clear();\n        navigate('/congrejulations');\n      } else {\n        formik.setValues({\n          ...formik.values,\n          error: 'Invalid OTP. Please try again.'\n        });\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      formik.setValues({\n        ...formik.values,\n        error: ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to verify OTP. Please try again.'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full flex justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-[90%] md:w-[480px] border-[1px] border-black flex flex-col items-center mt-20\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-[30px] md:text-[38px] font-bold font-poppins py-3\",\n        children: \"TMF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-[40px] md:text-[48px] font-bold font-roboto \",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-[14px] md:text-[18px]  font-roboto py-3\",\n        children: \"Reset Your Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-[90%] md:w-[80%] \",\n        children: /*#__PURE__*/_jsxDEV(TextInput, {\n          label: \"New Password*\",\n          type: \"password\",\n          onChange: e => {\n            formik.setValues({\n              ...formik.values,\n              newPassword: e.target.value\n            });\n          },\n          error: \"\",\n          icon: /*#__PURE__*/_jsxDEV(SvgIcons.Eye, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-[90%] md:w-[80%] pb-5\",\n        children: /*#__PURE__*/_jsxDEV(TextInput, {\n          label: \"Confirm Password*\",\n          type: \"password\",\n          onChange: e => {\n            formik.setValues({\n              ...formik.values,\n              confirmPassword: e.target.value\n            });\n          },\n          error: formik.values.syntaxError,\n          icon: /*#__PURE__*/_jsxDEV(SvgIcons.Eye, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-[90%] md:w-[80%] pb-8\",\n        children: /*#__PURE__*/_jsxDEV(SimpleButton, {\n          text: \"Change Password\",\n          style: \"dark\",\n          onClick: () => handleConfirmClick,\n          disabled: formik.values.newPassword == '' || formik.values.confirmPassword == '' || formik.values.newPassword != formik.values.confirmPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword_Two, \"Rp2mugcnJ3NxV4Ez9Xu1KHLBmFk=\", false, function () {\n  return [useNavigate, useFormik];\n});\n_c = ResetPassword_Two;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword_Two\");","map":{"version":3,"names":["React","TextInput","SvgIcons","SimpleButton","useNavigate","axios","useFormik","useEffect","jsxDEV","_jsxDEV","ResetPassword_Two","_s","navigate","formik","initialValues","error","success","syntaxError","newPassword","confirmPassword","values","setValues","handleConfirmClick","resetPasswordData","sessionStorage","getItem","sessionDataObject","JSON","parse","response","post","status","clear","err","_err$response","_err$response$data","data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","label","type","onChange","e","target","value","icon","Eye","text","style","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/ammarhussain/Desktop/TMF-frontend/src/pages/Auth/resetpassword_two.js"],"sourcesContent":["import React from 'react';\nimport { TextInput } from '../../components/TextInput';\nimport SvgIcons from '../../components/svg';\nimport { SimpleButton } from '../../components/SimpleButton';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { useFormik } from 'formik';\nimport { useEffect } from 'react';\n\nexport const ResetPassword_Two = () => {\n  const navigate = useNavigate();\n\n  let formik = useFormik({\n    initialValues: {\n      error: '',\n      success: '',\n      syntaxError: '',\n      newPassword: '',\n      confirmPassword: '',\n    },\n  });\n  useEffect(() => {\n    if (formik.values.syntaxError)\n      formik.setValues({ ...formik.values, syntaxError: '' });\n  }, [formik.values.newPassword, formik.values.confirmPassword]);\n\n\n  const handleConfirmClick = async () => {\n    try {\n\n      const resetPasswordData = sessionStorage.getItem('reset-password');\n      let sessionDataObject ;\n      if (resetPasswordData) {\n           sessionDataObject = JSON.parse(resetPasswordData);\n      }\n      const response = await axios.post(\n        'https://tmf-backend.onrender.com/users/reset-password',\n        {\n          ...sessionDataObject,\n          newPassword: formik.values.newPassword,\n        }\n      );\n\n      if (response.status === 200) {\n        sessionStorage.clear();\n        navigate('/congrejulations');\n      } else {\n        formik.setValues({\n          ...formik.values,\n          error: 'Invalid OTP. Please try again.',\n        });\n      }\n    } catch (err) {\n      formik.setValues({\n        ...formik.values,\n        error:\n          err.response?.data?.message ||\n          'Failed to verify OTP. Please try again.',\n      });\n    }\n  };\n\n  return (\n    <div className='w-full flex justify-center'>\n      <div className='w-[90%] md:w-[480px] border-[1px] border-black flex flex-col items-center mt-20'>\n        <h2 className='text-[30px] md:text-[38px] font-bold font-poppins py-3'>\n          TMF\n        </h2>\n        <h1 className='text-[40px] md:text-[48px] font-bold font-roboto '>\n          Reset Password\n        </h1>\n        <p className='text-[14px] md:text-[18px]  font-roboto py-3'>\n          Reset Your Password\n        </p>\n\n        <div className='w-[90%] md:w-[80%] '>\n          <TextInput\n            label='New Password*'\n            type='password'\n            onChange={(e) => {\n              formik.setValues({\n                ...formik.values,\n                newPassword: e.target.value,\n              });\n            }}\n            error=''\n            icon={<SvgIcons.Eye />}\n          />\n        </div>\n        <div className='w-[90%] md:w-[80%] pb-5'>\n          <TextInput\n            label='Confirm Password*'\n            type='password'\n            onChange={(e) => {\n              formik.setValues({\n                ...formik.values,\n                confirmPassword: e.target.value,\n              });\n            }}\n            error={formik.values.syntaxError}\n            icon={<SvgIcons.Eye />}\n          />\n        </div>\n\n        <div className='w-[90%] md:w-[80%] pb-8'>\n          <SimpleButton\n            text='Change Password'\n            style='dark'\n            onClick={() => handleConfirmClick}\n            disabled={\n              formik.values.newPassword == '' ||\n              formik.values.confirmPassword == '' ||\n              formik.values.newPassword != formik.values.confirmPassword\n            }\n          />\n        </div>\n\n        {/* <p className='text-[14px] md:text-[16px] flex  font-roboto py-3 pb-5 gap-2'>\n            Don't have an account?\n          <span className='cursor-pointer underline' onClick={()=>{navigate('/signup')}}>{` Sign Up`}</span>\n        </p> */}\n      </div>\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}