{"ast":null,"code":"var _jsxFileName = \"/Users/ammarhussain/Desktop/TMF-frontend/src/components/OTPInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OTPInput = ({\n  ...props\n}) => {\n  _s();\n  const [otp, setOtp] = useState(props.valueArray || ['', '', '', '']);\n  const inputRefs = useRef([]);\n  const handleInput = (e, index) => {\n    const value = e.target.value;\n    if (/^[0-9]{1}$/.test(value)) {\n      const newOtp = [...otp];\n      newOtp[index] = value;\n      setOtp(newOtp);\n\n      // Move focus to the next input field\n      if (index < otp.length - 1) {\n        inputRefs.current[index + 1].focus();\n      }\n    } else if (value === '') {\n      const newOtp = [...otp];\n      newOtp[index] = '';\n      setOtp(newOtp);\n    }\n  };\n  const handleKeyDown = (e, index) => {\n    if (e.key === 'Backspace' || e.key === 'Delete') {\n      e.preventDefault();\n      if (otp[index] === '') {\n        if (index > 0) {\n          inputRefs.current[index - 1].focus();\n        }\n      } else {\n        const newOtp = [...otp];\n        newOtp[index] = '';\n        setOtp(newOtp);\n      }\n    }\n  };\n  const handlePaste = e => {\n    e.preventDefault();\n    const text = e.clipboardData.getData('text');\n    if (new RegExp(`^[0-9]{${otp.length}}$`).test(text)) {\n      const newOtp = text.split('');\n      setOtp(newOtp);\n      inputRefs.current[otp.length - 1].focus();\n    }\n  };\n  const handleFocus = index => {\n    inputRefs.current[index].select();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center gap-3\",\n      children: otp.map((_, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"w-14 h-14 text-center text-2xl font-extrabold text-black border border-black  appearance-none rounded p-4 outline-none focus:bg-white  \",\n        value: otp[index],\n        onChange: e => handleInput(e, index),\n        onKeyDown: e => handleKeyDown(e, index),\n        onFocus: () => handleFocus(index),\n        onPaste: handlePaste,\n        ref: el => inputRefs.current[index] = el,\n        maxLength: 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(OTPInput, \"Yl3lLUqfu0RhHi1fIxEwnW6xjDM=\");\n_c = OTPInput;\nexport default OTPInput;\nvar _c;\n$RefreshReg$(_c, \"OTPInput\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","OTPInput","props","_s","otp","setOtp","valueArray","inputRefs","handleInput","e","index","value","target","test","newOtp","length","current","focus","handleKeyDown","key","preventDefault","handlePaste","text","clipboardData","getData","RegExp","split","handleFocus","select","className","children","map","_","type","onChange","onKeyDown","onFocus","onPaste","ref","el","maxLength","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ammarhussain/Desktop/TMF-frontend/src/components/OTPInput.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst OTPInput = ({...props}) => {\n  const [otp, setOtp] = useState(props.valueArray || ['', '', '', '']);\n  const inputRefs = useRef([]);\n\n  const handleInput = (e, index) => {\n    const value = e.target.value;\n    if (/^[0-9]{1}$/.test(value)) {\n      const newOtp = [...otp];\n      newOtp[index] = value;\n      setOtp(newOtp);\n\n      // Move focus to the next input field\n      if (index < otp.length - 1) {\n        inputRefs.current[index + 1].focus();\n      }\n    } else if (value === '') {\n      const newOtp = [...otp];\n      newOtp[index] = '';\n      setOtp(newOtp);\n    }\n  };\n\n  const handleKeyDown = (e, index) => {\n    if (e.key === 'Backspace' || e.key === 'Delete') {\n      e.preventDefault();\n      if (otp[index] === '') {\n        if (index > 0) {\n          inputRefs.current[index - 1].focus();\n        }\n      } else {\n        const newOtp = [...otp];\n        newOtp[index] = '';\n        setOtp(newOtp);\n      }\n    }\n  };\n\n  const handlePaste = (e) => {\n    e.preventDefault();\n    const text = e.clipboardData.getData('text');\n    if (new RegExp(`^[0-9]{${otp.length}}$`).test(text)) {\n      const newOtp = text.split('');\n      setOtp(newOtp);\n      inputRefs.current[otp.length - 1].focus();\n    }\n  };\n\n  const handleFocus = (index) => {\n    inputRefs.current[index].select();\n  };\n\n \n\n  return (\n    <div className=\"\">\n     \n     <div className=\"flex items-center justify-center gap-3\">\n          {otp.map((_, index) => (\n            <input\n              key={index}\n              type=\"text\"\n              className=\"w-14 h-14 text-center text-2xl font-extrabold text-black border border-black  appearance-none rounded p-4 outline-none focus:bg-white  \"\n              value={otp[index]}\n              onChange={(e) => handleInput(e, index)}\n              onKeyDown={(e) => handleKeyDown(e, index)}\n              onFocus={() => handleFocus(index)}\n              onPaste={handlePaste}\n              ref={(el) => inputRefs.current[index] = el}\n              maxLength={1}\n            />\n          ))}\n        </div>\n     \n    </div>\n  );\n};\n\nexport default OTPInput;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}